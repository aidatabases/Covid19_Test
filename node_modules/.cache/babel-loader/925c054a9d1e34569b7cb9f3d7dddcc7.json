{"ast":null,"code":"var _jsxFileName = \"/Users/deadman/Session-Management/frontend/src/views/examples/Hs.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // import useAxios from 'axios-hooks'\n// import Tab from \"./Tab\"\n\nimport { useParams } from \"react-router\";\nimport Test_Zoom from './test_zoom';\n\nfunction Hs() {\n  const params = useParams();\n  let country = params.country;\n  let hscode = params.hscode;\n  const [list, setList] = useState([]);\n  const [loading, setloading] = useState(false);\n  const [error, seterror] = useState(false);\n  useEffect(() => {\n    var url = 'http://159.65.150.184:9200/hello_trade_analytica/_search';\n    let query = get_query(country, hscode);\n    setloading(true);\n    axios.post(url, query).then(d => {\n      if (d.status === 200) {\n        // let data = d.data.hits.hits._source.data\n        let data = d.data.hits.hits[0]._source.data;\n        console.log(\"data ----- \", data);\n        let list = [];\n\n        for (let i in data) {\n          list.push({\n            \"year\": i,\n            \"value\": data[i]\n          });\n        }\n\n        console.log(\"list ----\", list);\n        setList(list);\n      } else {\n        console.log(\"err\");\n      }\n\n      setloading(false);\n    }).catch(error => {\n      console.log(error);\n      setloading(false);\n      seterror(true);\n    });\n\n    if (loading) {\n      seterror(true);\n    }\n  }, []);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }\n  }, \"Error!\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Test_Zoom, {\n    data: list,\n    width: 1000,\n    height: 120,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction get_list_from_buckets(bucket) {\n  let list_bucket = bucket.map(item => {\n    let hscode = item.key;\n    let d = item.Country_name.hits.hits[0]._source;\n    let Description = d.Description;\n    let HSName = d.HSName;\n    let HS_Code_Name = d[\"HS Code Name\"];\n    return {\n      hs_code: hscode,\n      Description: Description,\n      HSName: HSName,\n      HS_Code_Name: HS_Code_Name\n    };\n  });\n  return list_bucket;\n}\n\nfunction get_query(country, hscode) {\n  let query = {\n    \"query\": {\n      \"bool\": {\n        \"must\": [{\n          \"match\": {\n            \"Country\": country\n          }\n        }, {\n          \"match\": {\n            \"HSCode\": hscode\n          }\n        }]\n      }\n    }\n  };\n  return query;\n}\n\nexport default Hs;","map":{"version":3,"sources":["/Users/deadman/Session-Management/frontend/src/views/examples/Hs.js"],"names":["React","useState","useEffect","axios","useParams","Test_Zoom","Hs","params","country","hscode","list","setList","loading","setloading","error","seterror","url","query","get_query","post","then","d","status","data","hits","_source","console","log","i","push","catch","get_list_from_buckets","bucket","list_bucket","map","item","key","Country_name","Description","HSName","HS_Code_Name","hs_code"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n// import useAxios from 'axios-hooks'\n// import Tab from \"./Tab\"\nimport {useParams} from \"react-router\"\nimport Test_Zoom from './test_zoom'\n\n\nfunction Hs(){\n    const params = useParams()\n    let country = params.country\n    let hscode = params.hscode\n\n    const [list,setList] = useState([])\n    const [loading,setloading] = useState(false)\n    const [error,seterror] = useState(false)\n\n    useEffect(() => {\n      var url = 'http://159.65.150.184:9200/hello_trade_analytica/_search'\n      let query = get_query(country,hscode)\n      setloading(true)\n      axios.post(url, query)\n        .then( d => {\n          if(d.status === 200 ){\n            // let data = d.data.hits.hits._source.data\n            let data = d.data.hits.hits[0]._source.data\n            console.log(\"data ----- \",data)\n\n\n            let list = []\n            for(let i in data)\n            {\n                list.push({ \"year\":i , \"value\":data[i] })      \n            }\n\n            console.log(\"list ----\",list)\n\n            setList(list)\n          }\n          else{\n            console.log(\"err\")\n          }\n          setloading(false)\n        })\n        .catch( error => {\n            console.log(error)\n            setloading(false)\n            seterror(true)\n        });\n        if(loading){\n          seterror(true)\n        }\n\n    },[])\n\n\n\n    if (loading) return <p>Loading...</p>\n    if (error) return <p>Error!</p>\n\n    return (\n        <div>\n            <Test_Zoom data={list} width={1000} height={120}/>\n        </div>\n    )\n}\n\n\n\n\nfunction get_list_from_buckets(bucket){\n    let list_bucket = bucket.map(item => {\n        let hscode = item.key\n        let d = item.Country_name.hits.hits[0]._source\n\n        let Description = d.Description\n        let HSName = d.HSName\n        let HS_Code_Name = d[\"HS Code Name\"]\n\n        return {\n            hs_code:hscode,\n            Description:Description,\n            HSName:HSName,\n            HS_Code_Name:HS_Code_Name\n        }\n    })\n\n    return list_bucket\n}\n\nfunction get_query(country,hscode){\n    let query = {\n        \"query\": {\n          \"bool\": {\n            \"must\": [\n              {\"match\": {\"Country\": country}},\n              {\"match\": {\"HSCode\": hscode }}\n            ]\n          }\n        }\n      }\n\n    return query\n}\n\n\n\n\nexport default Hs\n"]},"metadata":{},"sourceType":"module"}