{"ast":null,"code":"import axios from 'axios';\nexport const getNews = async q => {\n  // let q = 'Rice'\n  let apiKey = 'f9b4e3aa84eb41b6bf8cbc070b959f1f'; // let url =`https://newsapi.org/v2/top-headlines?country=in&apiKey=${apiKey}&q=${q}`;\n\n  let url = `https://newsapi.org/v2/everything?apiKey=${apiKey}&q=${q}`;\n\n  try {\n    const {\n      data\n    } = await axios.get(url);\n\n    if (data.status === \"ok\") {\n      let articles = data.articles;\n      let news_list = articles.map(article => {\n        return {\n          Source: article.source.name,\n          Title: article.title,\n          Url: article.url\n        };\n      });\n      return news_list;\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getGoogleNews = async q => {\n  // let q = 'Rice'\n  let apiKey = 'AIzaSyCfsyxlCdBE_yrvCj_4pfn6gWYC3-lJfNQ';\n  let cx = '004856453172522822393:tnzydfphdjd'; // let url =`https://www.googleapis.com/customsearch/v1?key=AIzaSyCfsyxlCdBE_yrvCj_4pfn6gWYC3-lJfNQ&cx=004856453172522822393:tnzydfphdjd&q=Rice`;\n\n  let url = `https://www.googleapis.com/customsearch/v1?key=${apiKey}&cx=${cx}&q=${q}`;\n\n  try {\n    const {\n      data,\n      status\n    } = await axios.get(url);\n\n    if (status === 200) {\n      let articles = data.items;\n      let news_list = articles.map(article => {\n        return {\n          Source: article.displayLink,\n          Title: article.title,\n          Url: article.link\n        };\n      });\n      return news_list;\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getGNews = async q => {\n  // let q = 'Rice'\n  let apiKey = '3dfeeb4c2af8a8512f9ba96f380ce54b';\n  let url = `https://gnews.io/api/v3/search?q=${q}&token=${apiKey}&lang=en&country=in&max=10`;\n\n  try {\n    const {\n      data,\n      status\n    } = await axios.get(url);\n\n    if (status === 200) {\n      let articles = data.articles;\n      let news_list = articles.map(article => {\n        return {\n          Source: article.source.name,\n          Title: article.title,\n          Url: article.url\n        };\n      });\n      return news_list; // console.log(articles)\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["/home/dhakad/Documents/AI/Frontend_Test/src/views/examples/newsApi.js"],"names":["axios","getNews","q","apiKey","url","data","get","status","articles","news_list","map","article","Source","source","name","Title","title","Url","err","console","log","getGoogleNews","cx","items","displayLink","link","getGNews"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAOC,CAAP,IAAa;AAEhC;AACA,MAAIC,MAAM,GAAG,kCAAb,CAHgC,CAIhC;;AACA,MAAIC,GAAG,GAAG,4CAA2CD,MAAO,MAAKD,CAAE,EAAnE;;AAIA,MAAI;AACA,UAAM;AAACG,MAAAA;AAAD,QAAS,MAAML,KAAK,CAACM,GAAN,CAAUF,GAAV,CAArB;;AACA,QAAGC,IAAI,CAACE,MAAL,KAAgB,IAAnB,EAAyB;AACrB,UAAIC,QAAQ,GAAGH,IAAI,CAACG,QAApB;AACA,UAAIC,SAAS,GAAGD,QAAQ,CAACE,GAAT,CAAaC,OAAO,IAAI;AACpC,eAAO;AACHC,UAAAA,MAAM,EAAGD,OAAO,CAACE,MAAR,CAAeC,IADrB;AAEHC,UAAAA,KAAK,EAAGJ,OAAO,CAACK,KAFb;AAGHC,UAAAA,GAAG,EAAGN,OAAO,CAACP;AAHX,SAAP;AAKH,OANe,CAAhB;AAQA,aAAOK,SAAP;AACH;AACJ,GAdD,CAeA,OAAOS,GAAP,EAAY;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CA3BM;AA6BP,OAAO,MAAMG,aAAa,GAAG,MAAOnB,CAAP,IAAa;AAEtC;AACA,MAAIC,MAAM,GAAG,yCAAb;AACA,MAAImB,EAAE,GAAE,mCAAR,CAJsC,CAKtC;;AACA,MAAIlB,GAAG,GAAI,kDAAiDD,MAAO,OAAMmB,EAAG,MAAKpB,CAAE,EAAnF;;AAGA,MAAI;AACA,UAAM;AAACG,MAAAA,IAAD;AAAME,MAAAA;AAAN,QAAgB,MAAMP,KAAK,CAACM,GAAN,CAAUF,GAAV,CAA5B;;AACA,QAAGG,MAAM,KAAK,GAAd,EAAmB;AACf,UAAIC,QAAQ,GAAGH,IAAI,CAACkB,KAApB;AACA,UAAId,SAAS,GAAGD,QAAQ,CAACE,GAAT,CAAaC,OAAO,IAAI;AACpC,eAAO;AACHC,UAAAA,MAAM,EAAGD,OAAO,CAACa,WADd;AAEHT,UAAAA,KAAK,EAAGJ,OAAO,CAACK,KAFb;AAGHC,UAAAA,GAAG,EAAGN,OAAO,CAACc;AAHX,SAAP;AAKH,OANe,CAAhB;AAQA,aAAOhB,SAAP;AACH;AACJ,GAdD,CAeA,OAAOS,GAAP,EAAY;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CA3BM;AA8BP,OAAO,MAAMQ,QAAQ,GAAG,MAAOxB,CAAP,IAAa;AAEjC;AACA,MAAIC,MAAM,GAAG,kCAAb;AACA,MAAIC,GAAG,GAAG,oCAAmCF,CAAE,UAASC,MAAO,4BAA/D;;AAGA,MAAI;AACA,UAAM;AAACE,MAAAA,IAAD;AAAME,MAAAA;AAAN,QAAgB,MAAMP,KAAK,CAACM,GAAN,CAAUF,GAAV,CAA5B;;AACA,QAAGG,MAAM,KAAK,GAAd,EAAmB;AACf,UAAIC,QAAQ,GAAGH,IAAI,CAACG,QAApB;AACA,UAAIC,SAAS,GAAGD,QAAQ,CAACE,GAAT,CAAaC,OAAO,IAAI;AACpC,eAAO;AACHC,UAAAA,MAAM,EAAGD,OAAO,CAACE,MAAR,CAAeC,IADrB;AAEHC,UAAAA,KAAK,EAAGJ,OAAO,CAACK,KAFb;AAGHC,UAAAA,GAAG,EAAGN,OAAO,CAACP;AAHX,SAAP;AAKH,OANe,CAAhB;AAQA,aAAOK,SAAP,CAVe,CAWf;AACH;AACJ,GAfD,CAgBA,OAAOS,GAAP,EAAY;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CA1BM","sourcesContent":["import axios from 'axios';\n\nexport const getNews = async (q) => {\n\n    // let q = 'Rice'\n    let apiKey = 'f9b4e3aa84eb41b6bf8cbc070b959f1f'\n    // let url =`https://newsapi.org/v2/top-headlines?country=in&apiKey=${apiKey}&q=${q}`;\n    let url =`https://newsapi.org/v2/everything?apiKey=${apiKey}&q=${q}`;\n\n\n\n    try {\n        const {data} = await axios.get(url);\n        if(data.status === \"ok\" ){\n            let articles = data.articles\n            let news_list = articles.map(article => {\n                return {\n                    Source : article.source.name,\n                    Title : article.title,\n                    Url : article.url\n                }\n            })\n\n            return news_list\n        }\n    } \n    catch (err) {\n        console.log(err)\n    }\n};\n\nexport const getGoogleNews = async (q) => {\n\n    // let q = 'Rice'\n    let apiKey = 'AIzaSyCfsyxlCdBE_yrvCj_4pfn6gWYC3-lJfNQ'\n    let cx= '004856453172522822393:tnzydfphdjd'\n    // let url =`https://www.googleapis.com/customsearch/v1?key=AIzaSyCfsyxlCdBE_yrvCj_4pfn6gWYC3-lJfNQ&cx=004856453172522822393:tnzydfphdjd&q=Rice`;\n    let url = `https://www.googleapis.com/customsearch/v1?key=${apiKey}&cx=${cx}&q=${q}`\n\n\n    try {\n        const {data,status} = await axios.get(url);\n        if(status === 200 ){\n            let articles = data.items\n            let news_list = articles.map(article => {\n                return {\n                    Source : article.displayLink,\n                    Title : article.title,\n                    Url : article.link\n                }\n            })\n\n            return news_list\n        }\n    } \n    catch (err) {\n        console.log(err)\n    }\n};\n\n\nexport const getGNews = async (q) => {\n\n    // let q = 'Rice'\n    let apiKey = '3dfeeb4c2af8a8512f9ba96f380ce54b'\n    let url= `https://gnews.io/api/v3/search?q=${q}&token=${apiKey}&lang=en&country=in&max=10`\n\n\n    try {\n        const {data,status} = await axios.get(url);\n        if(status === 200 ){\n            let articles = data.articles\n            let news_list = articles.map(article => {\n                return {\n                    Source : article.source.name,\n                    Title : article.title,\n                    Url : article.url\n                }\n            })\n\n            return news_list\n            // console.log(articles)\n        }\n    } \n    catch (err) {\n        console.log(err)\n    }\n};"]},"metadata":{},"sourceType":"module"}