{"ast":null,"code":"var _jsxFileName = \"/home/dhakad/Documents/AI/FF/Frontend_Test/src/views/examples/Top2.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from \"react-router\";\nimport \"./tt.css\";\n\nfunction Top2({\n  hscode\n}) {\n  // const params = useParams()\n  // let hscode = params.hscode\n  // let mode = params.mode\n  const [import_list, setImportList] = useState([]);\n  const [export_list, setExportList] = useState([]);\n  const [loading, setloading] = useState(false);\n  const [error, seterror] = useState(false); // var url = 'http://159.65.150.184:9200/trade_analytica_march/_search'\n\n  var url = 'http://159.65.150.184:9200/hello_trade_analytica/_search';\n  let query = get_query(hscode); // let query = get_query2(country)\n\n  useEffect(() => {\n    setloading(true);\n    axios.post(url, query).then(d => {\n      if (d.status === 200) {\n        // let data = d.data.hits.hits._source.data\n        // let data = d.data.aggregations\n        console.log(\"data ----\", d.data);\n        let import_data = d.data.aggregations.import.import_data.buckets;\n        let export_data = d.data.aggregations.export.export_data.buckets;\n        console.log(\"import data ----- \", import_data);\n        console.log(\"export data ----- \", export_data);\n        let list = get_list_from_buckets(import_data);\n        let list2 = get_list_from_buckets(export_data);\n        setImportList(list);\n        setExportList(list2);\n        console.log(\"list ---\", list, \"\\nlist ----2\", list2);\n      } else {\n        console.log(\"err\");\n      }\n\n      setloading(false);\n    }).catch(error => {\n      console.log(error);\n      setloading(false);\n      seterror(true);\n    });\n\n    if (loading) {\n      seterror(true);\n    }\n  }, []);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }\n  }, \"Error!\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-ren\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-all-tt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-imp-tt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 6\n    }\n  }, \"Top Import countries for hscode \", hscode), /*#__PURE__*/React.createElement(\"table\", {\n    id: \"tt-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"country\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Value - 2018\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, import_list.map((element, j) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: j,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, element.country), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, element.value));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-exp-tt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"Top Export Country for hscode \", hscode), /*#__PURE__*/React.createElement(\"table\", {\n    id: \"tt-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"country\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Value - 2018\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, export_list.map((element, j) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: j,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, element.country), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, element.value));\n  }))))));\n}\n\nfunction get_list_from_buckets(bucket) {\n  let list_bucket = bucket.map(item => {\n    let value = item.key;\n    let data = item.details.hits.hits[0]._source;\n    let hscode = data.HSCode;\n    let country = data.Country;\n    return {\n      country: country,\n      value: value\n    };\n  });\n  return list_bucket;\n}\n\nfunction get_query(hscode) {\n  let query = {\n    \"query\": {\n      \"bool\": {\n        \"must\": [{\n          \"match\": {\n            \"HSCode\": `${hscode}`\n          }\n        }]\n      }\n    },\n    \"aggs\": {\n      \"import\": {\n        \"filter\": {\n          \"term\": {\n            \"Mode\": \"Import\"\n          }\n        },\n        \"aggs\": {\n          \"import_data\": {\n            \"terms\": {\n              \"field\": \"data.2018\",\n              \"order\": {\n                \"_key\": \"desc\"\n              }\n            },\n            \"aggs\": {\n              \"details\": {\n                \"top_hits\": {\n                  \"size\": 1,\n                  \"_source\": {\n                    \"includes\": [\"Country\", \"HSCode\", \"HSCodeName\"]\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"export\": {\n        \"filter\": {\n          \"term\": {\n            \"Mode\": \"Export\"\n          }\n        },\n        \"aggs\": {\n          \"export_data\": {\n            \"terms\": {\n              \"field\": \"data.2018\",\n              \"order\": {\n                \"_key\": \"desc\"\n              }\n            },\n            \"aggs\": {\n              \"details\": {\n                \"top_hits\": {\n                  \"size\": 1,\n                  \"_source\": {\n                    \"includes\": [\"Country\", \"HSCode\", \"HSCodeName\"]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"size\": 0\n  };\n  return query;\n}\n\nexport default Top2;","map":{"version":3,"sources":["/home/dhakad/Documents/AI/FF/Frontend_Test/src/views/examples/Top2.js"],"names":["React","useState","useEffect","axios","useParams","Top2","hscode","import_list","setImportList","export_list","setExportList","loading","setloading","error","seterror","url","query","get_query","post","then","d","status","console","log","data","import_data","aggregations","import","buckets","export_data","export","list","get_list_from_buckets","list2","catch","map","element","j","country","value","bucket","list_bucket","item","key","details","hits","_source","HSCode","Country"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {useParams} from \"react-router\"\nimport\"./tt.css\";\nfunction Top2({hscode}){\n    // const params = useParams()\n    // let hscode = params.hscode\n    // let mode = params.mode\n\n    const [import_list,setImportList] = useState([])\n    const [export_list,setExportList] = useState([])\n    const [loading,setloading] = useState(false)\n    const [error,seterror] = useState(false)\n\n\n\n    // var url = 'http://159.65.150.184:9200/trade_analytica_march/_search'\n    var url = 'http://159.65.150.184:9200/hello_trade_analytica/_search'\n\n\n    let query = get_query(hscode)\n    // let query = get_query2(country)\n    \n\n\n\n\n    useEffect(() => {\n      setloading(true)\n      axios.post(url, query)\n        .then( d => {\n          if(d.status === 200 ){\n            // let data = d.data.hits.hits._source.data\n            // let data = d.data.aggregations\n            console.log(\"data ----\",d.data)\n            let import_data = d.data.aggregations.import.import_data.buckets\n            let export_data = d.data.aggregations.export.export_data.buckets\n\n\n            console.log(\"import data ----- \",import_data)\n            console.log(\"export data ----- \",export_data)\n            \n\n            let list = get_list_from_buckets(import_data)\n            let list2 = get_list_from_buckets(export_data)\n            setImportList(list)\n            setExportList(list2)\n            \n            console.log(\"list ---\",list,\"\\nlist ----2\",list2)\n          }\n          else{\n            console.log(\"err\")\n          }\n          setloading(false)\n        })\n        .catch( error => {\n            console.log(error)\n            setloading(false)\n            seterror(true)\n        });\n        if(loading){\n          seterror(true)\n        }\n\n    },[])\n\n\n\n    if (loading) return <p>Loading...</p>\n    if (error) return <p>Error!</p>\n\n    return (\n        <div className=\"top-ren\" >\n            {/* <h2>{hscode}</h2> */}\n            \n\n        <div className=\"top-all-tt\">            \n        <div className=\"top-imp-tt\">            \n     <h4>Top Import countries for hscode {hscode}</h4>\n\n            <table id=\"tt-tab\">\n                <thead>\n              <tr>\n                <th>country</th>\n                <th>Value - 2018</th>\n              </tr>\n              </thead>\n              <tbody>\n              {\n              import_list.map((element,j) => {\n                return (\n                  <tr key={j}>\n                    <td>{element.country}</td>\n                    <td>{element.value}</td>\n                  </tr>\n                )\n              })\n              }\n              </tbody>\n            </table>\n\n            </div>\n\n            \n            <div className=\"top-exp-tt\">            \n\n      <h4>Top Export Country for hscode {hscode}</h4>\n            <table id=\"tt-tab\">\n                <thead>\n              <tr>\n                <th>country</th>\n                <th>Value - 2018</th>\n              </tr>\n              </thead>\n              <tbody>\n              {\n              export_list.map((element,j) => {\n                return (\n                  <tr key={j}>\n                    <td>{element.country}</td>\n                    <td>{element.value}</td>\n                  </tr>\n                )\n              })\n              }\n              </tbody>\n            </table>\n\n            {/* <h3>Import data</h3>\n            <h4>{JSON.stringify(import_list)}</h4>\n\n            <h3>Export data</h3>\n            <h4>{JSON.stringify(export_list)}</h4> */}\n        </div>\n        </div>\n        </div>\n    )\n}\n\n\n\n\nfunction get_list_from_buckets(bucket){\n    let list_bucket = bucket.map(item => {\n        let value = item.key\n        let data = item.details.hits.hits[0]._source\n        let hscode = data.HSCode\n        let country = data.Country\n\n        return {country:country,value : value}\n    })\n\n    return list_bucket\n}\n\nfunction get_query(hscode){\n    let query = {\n        \"query\": {\n          \"bool\": {\n            \"must\": [\n              {\"match\": {\"HSCode\": `${hscode}`}}\n            ]\n          }\n        },\n        \"aggs\": {\n          \"import\": {\n            \"filter\": {\n              \"term\": {\n              \"Mode\": \"Import\"\n            }\n          },\n          \"aggs\": {\n            \"import_data\": {\n              \"terms\": {\n                \"field\": \"data.2018\",\n                \"order\": {\n                  \"_key\": \"desc\"\n                }\n              },\n              \"aggs\": {\n                \"details\": {\"top_hits\": {\"size\": 1, \"_source\": {\"includes\": [\"Country\",\"HSCode\",\"HSCodeName\"]}}}\n                }\n              }\n            }\n          },\n          \"export\": {\n            \"filter\": {\n              \"term\": {\n              \"Mode\": \"Export\"\n            }\n          },\n          \"aggs\": {\n            \"export_data\": {\n              \"terms\": {\n                \"field\": \"data.2018\",\n                \"order\": {\n                  \"_key\": \"desc\"\n                }\n              },\n              \"aggs\": {\n                \"details\": {\"top_hits\": {\"size\": 1, \"_source\": {\"includes\": [\"Country\",\"HSCode\",\"HSCodeName\"]}}}\n                }\n              }\n            }\n          }\n        }\n        ,\n        \"size\": 0\n      }\n\n    return query\n}\n\n\n\n\nexport default Top2"]},"metadata":{},"sourceType":"module"}