{"ast":null,"code":"var _jsxFileName = \"/home/dhakad/Documents/AI/FF/Frontend_Test/src/views/examples/cc.js\";\nimport React, { PureComponent, useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Brush, ResponsiveContainer } from 'recharts';\nimport { useParams } from 'react-router';\nimport axios from 'axios';\nexport default function Example() {\n  const params = useParams();\n  var lev2 = params.level2key;\n  var lev3 = params.lev3;\n  var lev4 = params.lev4;\n  var lev5 = params.lev5;\n  var lev6 = params.lev6;\n  var lev7 = params.lev7;\n  console.log(lev2, \"----------\", lev3, \"----------\", lev4, \"----------\", lev5, \"----------\", lev6);\n  const [datax, setdata] = useState([]);\n  var [x, setx] = useState('');\n  useEffect(() => {\n    if (lev5 == undefined) {\n      x = lev4;\n      var query = {\n        \"query\": {\n          \"bool\": {\n            \"must\": [{\n              \"match\": {\n                \"Level2.keyword\": lev2\n              }\n            }, {\n              \"match\": {\n                \"Level3.keyword\": lev3\n              }\n            }, {\n              \"match\": {\n                \"Level4.keyword\": lev4\n              }\n            }]\n          }\n        }\n      };\n    } else if (lev6 == undefined) {\n      x = lev5;\n      var query = {\n        \"query\": {\n          \"bool\": {\n            \"must\": [{\n              \"match\": {\n                \"Level2.keyword\": lev2\n              }\n            }, {\n              \"match\": {\n                \"Level3.keyword\": lev3\n              }\n            }, {\n              \"match\": {\n                \"Level4.keyword\": lev4\n              }\n            }, {\n              \"match\": {\n                \"Level5.keyword\": lev5\n              }\n            }]\n          }\n        }\n      };\n    } else if (lev7 == undefined) {\n      x = lev6;\n      var query = {\n        \"query\": {\n          \"bool\": {\n            \"must\": [{\n              \"match\": {\n                \"Level2.keyword\": lev2\n              }\n            }, {\n              \"match\": {\n                \"Level3.keyword\": lev3\n              }\n            }, {\n              \"match\": {\n                \"Level4.keyword\": lev4\n              }\n            }, {\n              \"match\": {\n                \"Level5.keyword\": lev5\n              }\n            }, {\n              \"match\": {\n                \"Level6.keyword\": lev6\n              }\n            }]\n          }\n        }\n      };\n    } else {\n      x = lev6;\n      var query = {\n        \"query\": {\n          \"bool\": {\n            \"must\": [{\n              \"match\": {\n                \"Level2.keyword\": lev2\n              }\n            }, {\n              \"match\": {\n                \"Level3.keyword\": lev3\n              }\n            }, {\n              \"match\": {\n                \"Level4.keyword\": lev4\n              }\n            }, {\n              \"match\": {\n                \"Level5.keyword\": lev5\n              }\n            }, {\n              \"match\": {\n                \"Level6.keyword\": lev6\n              }\n            }, {\n              \"match\": {\n                \"Level7.keyword\": lev7\n              }\n            }]\n          }\n        }\n      };\n    }\n\n    setx(x);\n    const url = process.env.REACT_APP_ELASTIC_URL + process.env.REACT_APP_ELASTIC_ECONOMICS_INDEX + '/_search';\n    console.log(query);\n    axios.post(url, query).then(d => {\n      if (d.status === 200) {\n        console.log(d);\n        let temp_data = d.data.hits.hits[0]._source;\n        let data = temp_data.data;\n        let description = temp_data.Description;\n        console.log(\"chart dta\", description);\n        let list = [];\n\n        for (let [key, value] of Object.entries(data)) {\n          // console.log(`${key}: ${value}`);\n          let dict = {\n            name: `${key}`\n          };\n          dict[x] = value;\n          list.push(dict);\n        }\n\n        console.log(list, \"list\");\n        setdata(list);\n      } else {\n        console.log(\"err\");\n      }\n    }).catch(error => {\n      if (error) {\n        console.log(error);\n      } else {\n        console.log(\"Error!\");\n      }\n    });\n  }, [lev2, lev3, lev4, lev5, lev6]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 20\n    }\n  }, \"Chart\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 34\n    }\n  }), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"99%\",\n    height: 500,\n    margin: {\n      top: 20,\n      right: 0,\n      left: 50,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    width: 1450,\n    height: 600,\n    data: datax,\n    margin: {\n      top: 20,\n      right: 0,\n      left: 5,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Brush, {\n    dataKey: \"name\",\n    height: 30,\n    stroke: \"#000000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: x,\n    stroke: \"#000000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  })))) // </div>\n  ;\n}","map":{"version":3,"sources":["/home/dhakad/Documents/AI/FF/Frontend_Test/src/views/examples/cc.js"],"names":["React","PureComponent","useEffect","useState","ReactDOM","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Brush","ResponsiveContainer","useParams","axios","Example","params","lev2","level2key","lev3","lev4","lev5","lev6","lev7","console","log","datax","setdata","x","setx","undefined","query","url","process","env","REACT_APP_ELASTIC_URL","REACT_APP_ELASTIC_ECONOMICS_INDEX","post","then","d","status","temp_data","data","hits","_source","description","Description","list","key","value","Object","entries","dict","name","push","catch","error","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { PureComponent, useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom'\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,Brush,ResponsiveContainer\n} from 'recharts';\nimport { useParams } from 'react-router';\nimport axios from 'axios';\n\nexport default function Example () {\n  const params=useParams()\n    var lev2=params.level2key;\n    var lev3=params.lev3;\n    var lev4=params.lev4;\n    var lev5=params.lev5;\n    var lev6=params.lev6;\n    var lev7=params.lev7;\n    console.log(lev2,\"----------\",lev3,\"----------\",lev4,\"----------\",lev5,\"----------\",lev6)\n  const [datax,setdata]=useState([])\n  var[x,setx]=useState('')\n  \n  useEffect(() => {\n    \n    if(lev5==undefined){\n      x=lev4\n      var query = {\n        \"query\": {\n          \"bool\":{\n            \"must\":[\n              {\"match\": {\"Level2.keyword\": lev2}},\n              {\"match\": {\"Level3.keyword\": lev3}},\n              {\"match\": {\"Level4.keyword\": lev4}}\n              ]\n          }\n        }\n      }\n    }\n    else if(lev6==undefined)\n    {\n      x=lev5\n      var query = {\n        \"query\": {\n          \"bool\":{\n            \"must\":[\n              {\"match\": {\"Level2.keyword\": lev2}},\n              {\"match\": {\"Level3.keyword\": lev3}},\n              {\"match\": {\"Level4.keyword\": lev4}},\n              {\"match\": {\"Level5.keyword\": lev5}}\n              ]\n          }\n        }\n      }\n    }\n    else if(lev7==undefined)\n    {\n      x=lev6\n      var query = {\n        \"query\": {\n          \"bool\":{\n            \"must\":[\n              {\"match\": {\"Level2.keyword\": lev2}},\n              {\"match\": {\"Level3.keyword\": lev3}},\n              {\"match\": {\"Level4.keyword\": lev4}},\n              {\"match\": {\"Level5.keyword\": lev5}},\n              {\"match\": {\"Level6.keyword\": lev6}}\n              ]\n          }\n        }\n      }\n    }\n    else\n    {\n      x=lev6\n      var query = {\n        \"query\": {\n          \"bool\":{\n            \"must\":[\n              {\"match\": {\"Level2.keyword\": lev2}},\n              {\"match\": {\"Level3.keyword\": lev3}},\n              {\"match\": {\"Level4.keyword\": lev4}},\n              {\"match\": {\"Level5.keyword\": lev5}},\n              {\"match\": {\"Level6.keyword\": lev6}},\n              {\"match\": {\"Level7.keyword\": lev7}}\n              ]\n          }\n        }\n      }\n    }\n    setx(x)\n    const url = process.env.REACT_APP_ELASTIC_URL+process.env.REACT_APP_ELASTIC_ECONOMICS_INDEX+'/_search'\n\nconsole.log(query)\n\n    axios.post(url, query)\n\t\t.then( d => {\n\t\t\tif(d.status === 200 ){\n        console.log(d)\n        let temp_data = d.data.hits.hits[0]._source\n        let data =temp_data.data\n        let description = temp_data.Description\n\n        console.log(\"chart dta\",description)\n\t\t\t\t\n        let list = []\n\n        for (let [key, value] of Object.entries(data)) {\n          // console.log(`${key}: ${value}`);\n          let dict = {name : `${key}`}\n          dict[x]=value\n          list.push(dict)\n        }\n\t\t\t\t\n        console.log(list,\"list\")\n\n        setdata(list)\n        \n\t\t\t}\n\t\t\telse{\n\t\t\t\tconsole.log(\"err\")\n\t\t\t}\n\t\t})\n\t\t.catch( error => {\n\t\t\tif (error) {\n\t\t\t  console.log(error)\n\t\t\t}\n\t\t\telse{\n\t\t\t\tconsole.log(\"Error!\");\n\t\t\t}\n\t\t});\n    }, [lev2,lev3,lev4,lev5,lev6])\n\n\n    return (<div  ><h1>Chart</h1><br/>\n    {/* <div style={{marginLeft:\"51%\"}}> */}\n  <ResponsiveContainer width=\"99%\" height={500} margin={{\n          top: 20, right: 0, left: 50, bottom: 5,\n        }}>\n      <LineChart\n        width={1450}\n        height={600}\n        data={datax}\n        margin={{\n          top: 20, right: 0, left: 5, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Brush dataKey=\"name\" height={30} stroke=\"#000000\" />\n        <Line type=\"monotone\" dataKey={x} stroke=\"#000000\" />\n        \n      </LineChart>\n      </ResponsiveContainer>\n      </div>\n      // </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}