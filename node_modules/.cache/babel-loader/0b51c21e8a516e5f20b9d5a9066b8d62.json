{"ast":null,"code":"var _jsxFileName = \"/Users/deadman/Session-Management/frontend/src/views/examples/test_zoom.js\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { select, line, curveCardinal, scaleLinear, axisBottom, axisRight, scaleBand, values, utcYears, scaleTime, extent, axisLeft, brushX, event, invert, zoom, zoomTransform } from \"d3\";\nimport usePrevious from \"./usePrevious\";\nimport { Children } from \"react\";\nimport Test_Zoom_Child from \"./test_zoom_child\";\n\nfunction Test_Zoom(props) {\n  const data = props.data;\n  const [selection, setSelection] = useState('');\n  console.log(selection);\n  var [previousSelection, setpreviousSelection] = useState('');\n  useEffect(() => {\n    const svg = select(\".parentclass\");\n    const svgContent = svg.select(\".content\"); // [new Date(2014,0,0),new Date(2016,0,0)]\n\n    setpreviousSelection = selection; ///why is it done like this(previous selection is not at all being updated)\n\n    const yextent = extent(data, d => d.value);\n    const xextent = extent(data, d => d.year);\n    console.log(\"mineee\", xextent); //const xscale =scaleLinear().domain(data.map((x) => x.year)).range([0,2000])\n    // var xscale =scaleLinear().domain(xextent).range([0,props.width])\n\n    var xscale = scaleTime().domain([new Date(xextent[0], 0, 0), new Date(xextent[1], 0, 0)]).range([0, props.width]);\n    var yscale = scaleLinear().domain(yextent).range([props.height, 0]); //  if (currentZoomState) {\n    //   const newxscale = currentZoomState.rescaleX(xscale);\n    //   xscale.domain(newxscale.domain())\n    // }\n    //  if (!currentZoomState) {\n    //   if (!idleTimeout) \n    //     return idleTimeout = setTimeout(idled, 350); // This allows to wait a little bit\n    //     xscale =scaleLinear().domain(xextent).range([0,2000])\n    //  }\n    //   else {\n    //   xscale.domain([selection[0], selection[1]])\n    //   console.log(\"New X Scale\",xscale.domain())\n    //   }\n\n    const xaxis = axisBottom(xscale).ticks(data.length);\n    svg.select(\".x-axis\").style(\"transform\", `translateY(100px)`).call(xaxis);\n    const yaxis = axisRight(yscale);\n    svg.select(\".y-axis\").style(\"transform\", `translateX(2000px)`).call(yaxis);\n    const myLine = line().x(d => xscale(new Date(d.year, 0, 0))).y(d => props.height - yscale(d.value)).curve(curveCardinal);\n    svg.selectAll(\"path\").data([data]).join(\"path\").style(\"transform\", \"scale(1, -1)\").attr(\"d\", myLine).attr(\"fill\", \"none\").attr(\"stroke\", \"blue\");\n    svg.selectAll(\".myDot\").data(data).join(\"circle\").attr(\"class\", \"myDot\").attr(\"stroke\", \"blue\").attr(\"r\", d => d.year >= selection[0] && d.year <= selection[1] ? 8 : 6).attr(\"fill\", d => d.year >= selection[0] && d.year <= selection[1] ? \"orange\" : \"yellow\").attr(\"cx\", d => xscale(new Date(d.year, 0, 0))).attr(\"cy\", d => yscale(d.value) - 20).on(\"mouseenter\", d => {\n      svg.selectAll(\".tooltip\").data([d.value]).join(enter => enter.append(\"text\").attr(\"y\", yscale(d.value))).attr(\"class\", \"tooltip\").text(d.value).attr(\"x\", xscale(new Date(d.year, 0, 0))).attr(\"text-anchor\", \"middle\").attr(\"y\", yscale(d.value) - 10).transition().attr(\"opacity\", 1);\n    }).on(\"mouseleave\", () => svg.select(\".tooltip\").remove()).transition().attr(\"height\", d => props.height - yscale(d.value)); //   const zoomBehavior = zoom()\n    //   .scaleExtent([1, 10])\n    //   .translateExtent([\n    //     [0, 0],\n    //     [props.width, props.height]\n    //   ])\n    //   .on(\"zoom\", () => {\n    //     // My Current Zoom State\n    //     const zoomState = zoomTransform(svgRef.current);\n    //     console.log(\"Current Zoom State\", zoomState)\n    //     setCurrentZoomState(zoomState);\n    //   });\n    // svg.call(zoomBehavior)\n\n    console.log(\"widtheight\", props.width, props.height);\n    const brush = brushX().extent([[0, 0], [props.width, props.height]]).on(\"start brush end\", () => {\n      if (event.selection && event.selection[0] !== event.selection[1]) {\n        console.log();\n        const index = event.selection.map(xscale.invert);\n        console.log(\"Inverted X Index\", \"brushedddd\", index);\n        setSelection(index);\n      }\n    }); //console.log(\"this is previous selection\",previousSelection)\n\n    if (previousSelection === selection) {\n      svg.select(\".brush\").call(brush).call(brush.move, null); //what is the use of this??\n      // .call(brush.move, selection.map(xscale)); \n    }\n\n    select(\".twocharts\").style(\"border\", \"2px solid black\");\n    select(\".parentclass\").style(\"border\", \"1px solid black\");\n  }, [data, selection, previousSelection]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"twocharts\",\n    style: {\n      width: \"max-content\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Test_Zoom_Child, {\n    data: data,\n    width: 1000,\n    height: 300,\n    selection: selection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 93\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 98\n    }\n  }), /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"parentclass\",\n    width: props.width,\n    height: props.height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"defs\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"myClipPath\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: \"0\",\n    y: \"0\",\n    width: \"100%\",\n    height: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"content\",\n    clipPath: \"url(#myClipPath)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"y-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"brush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default Test_Zoom;","map":{"version":3,"sources":["/Users/deadman/Session-Management/frontend/src/views/examples/test_zoom.js"],"names":["React","useRef","useEffect","useState","select","line","curveCardinal","scaleLinear","axisBottom","axisRight","scaleBand","values","utcYears","scaleTime","extent","axisLeft","brushX","event","invert","zoom","zoomTransform","usePrevious","Children","Test_Zoom_Child","Test_Zoom","props","data","selection","setSelection","console","log","previousSelection","setpreviousSelection","svg","svgContent","yextent","d","value","xextent","year","xscale","domain","Date","range","width","yscale","height","xaxis","ticks","length","style","call","yaxis","myLine","x","y","curve","selectAll","join","attr","on","enter","append","text","transition","remove","brush","index","map","move"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport { select , line, curveCardinal, scaleLinear, axisBottom, axisRight, scaleBand, values, utcYears, scaleTime, extent, axisLeft, brushX, event, invert, zoom, zoomTransform } from \"d3\";\nimport usePrevious from \"./usePrevious\";\nimport { Children } from \"react\";\nimport Test_Zoom_Child from \"./test_zoom_child\";\n\nfunction Test_Zoom(props) {\n  const data = props.data;\n  const [selection, setSelection] = useState('');\n  console.log(selection)\n  var [previousSelection,setpreviousSelection]=useState('')\n\n\n  useEffect(() => {\n  const svg = select(\".parentclass\");\n  const svgContent = svg.select(\".content\")\n  // [new Date(2014,0,0),new Date(2016,0,0)]\n  \n  setpreviousSelection=selection;///why is it done like this(previous selection is not at all being updated)\n  \n\n   const yextent = extent(data, d=>d.value)\n   const xextent = extent(data, d=>d.year)\n\n   console.log(\"mineee\",xextent);\n   //const xscale =scaleLinear().domain(data.map((x) => x.year)).range([0,2000])\n  // var xscale =scaleLinear().domain(xextent).range([0,props.width])\n       var xscale =scaleTime().domain([new Date(xextent[0],0,0),new Date(xextent[1],0,0)]).range([0, props.width])\n\n   var yscale =scaleLinear().domain(yextent).range([props.height,0])\n\n  \n\n  //  if (currentZoomState) {\n  //   const newxscale = currentZoomState.rescaleX(xscale);\n  //   xscale.domain(newxscale.domain())\n  // }\n  \n   \n  //  if (!currentZoomState) {\n  //   if (!idleTimeout) \n  //     return idleTimeout = setTimeout(idled, 350); // This allows to wait a little bit\n  //     xscale =scaleLinear().domain(xextent).range([0,2000])\n  //  }\n  //   else {\n  //   xscale.domain([selection[0], selection[1]])\n  //   console.log(\"New X Scale\",xscale.domain())\n  //   }\n  \n\n   const xaxis = axisBottom(xscale).ticks(data.length)\n\n   svg\n   .select(\".x-axis\")\n   .style(\"transform\", `translateY(100px)`)\n   .call(xaxis)\n\n   const yaxis = axisRight(yscale);\n   svg\n   .select(\".y-axis\")\n   .style(\"transform\", `translateX(2000px)`)\n   .call(yaxis)\n\n   \n    const myLine = line()\n      .x(d => xscale(new Date(d.year,0,0)))\n      .y(d => props.height - yscale(d.value))\n    .curve(curveCardinal);\n      \n    svg\n      .selectAll(\"path\")\n      .data([data])\n      .join(\"path\")\n      .style(\"transform\", \"scale(1, -1)\")\n      .attr(\"d\", myLine)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"blue\")\n      \n\n      svg\n      .selectAll(\".myDot\")\n      .data(data)\n      .join(\"circle\")\n      .attr(\"class\", \"myDot\")\n      .attr(\"stroke\", \"blue\")\n      .attr(\"r\", (d) =>\n        d.year >= selection[0] && d.year <= selection[1] ? 8 : 6\n      )\n      .attr(\"fill\", (d) =>\n        d.year >= selection[0] && d.year <= selection[1] ? \"orange\" : \"yellow\"\n      )\n      .attr(\"cx\", (d) => xscale(new Date(d.year,0,0)))\n      .attr(\"cy\", (d) => yscale(d.value) - 20)\n      .on(\"mouseenter\", (d) => {\n        svg\n          .selectAll(\".tooltip\")\n          .data([d.value])\n          .join(enter => enter.append(\"text\").attr(\"y\", yscale(d.value)))\n          .attr(\"class\", \"tooltip\")\n          .text(d.value)\n          .attr(\"x\", xscale(new Date(d.year,0,0)))\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"y\", yscale(d.value)-10)\n          .transition()\n          .attr(\"opacity\", 1)\n      })\n      .on(\"mouseleave\", () => svg.select(\".tooltip\").remove())\n      .transition()\n      .attr(\"height\", d => props.height - yscale(d.value))\n\n    \n     \n   \n    //   const zoomBehavior = zoom()\n    //   .scaleExtent([1, 10])\n    //   .translateExtent([\n    //     [0, 0],\n    //     [props.width, props.height]\n    //   ])\n    //   .on(\"zoom\", () => {\n    //     // My Current Zoom State\n    \n    //     const zoomState = zoomTransform(svgRef.current);\n    //     console.log(\"Current Zoom State\", zoomState)\n    //     setCurrentZoomState(zoomState);\n        \n\n    //   });\n    \n      \n    // svg.call(zoomBehavior)\n      console.log(\"widtheight\",props.width,props.height)\n    const brush = brushX().extent([[0,0], [props.width, props.height]]).on(\"start brush end\", () => {\n      if (event.selection && event.selection[0] !== event.selection[1]) \n      { console.log()\n      const index = event.selection.map(xscale.invert);\n      console.log(\"Inverted X Index\",\"brushedddd\",index)\n      \n      setSelection(index);\n    }\n\n    })\n    //console.log(\"this is previous selection\",previousSelection)\n    if (previousSelection === selection) {\n      svg\n        .select(\".brush\")\n        .call(brush)\n        .call(brush.move, null) //what is the use of this??\n        // .call(brush.move, selection.map(xscale)); \n    \n    }\n    select(\".twocharts\").style(\"border\",\"2px solid black\")\n    select(\".parentclass\").style(\"border\",\"1px solid black\")\n\n\n  }, [data, selection, previousSelection]);\n\n  return (\n      <div className=\"twocharts\" style={{width:\"max-content\"}}>\n\n        <Test_Zoom_Child data={data} width = {1000} height = {300} selection = {selection}/><br/><br/>\n    <svg className=\"parentclass\" width={props.width} height={props.height}>\n    <defs>\n            <clipPath id=\"myClipPath\">\n              <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />\n            </clipPath>\n          </defs>\n          <g className=\"content\" clipPath=\"url(#myClipPath)\"></g>\n          <g className = \"x-axis\"></g>\n          <g className = \"y-axis\"></g>\n          <g className = \"brush\"></g>\n        </svg>\n        \n       </div>\n       \n  );\n\n}\n\nexport default Test_Zoom;"]},"metadata":{},"sourceType":"module"}