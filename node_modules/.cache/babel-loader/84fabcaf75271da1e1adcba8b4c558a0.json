{"ast":null,"code":"var _jsxFileName = \"/home/dhakad/Documents/AI/FF/Frontend_Test/src/index.js\";\nimport React, { createContext, useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Start from \"Start\";\nimport Cookies from 'js-cookie';\nexport const LoginContext = createContext(null);\nconst initialAuthData = {\n  flag: \"\"\n};\nconst [authData, setAuthData] = useState(initialAuthData);\n\nconst onLogout = () => setAuthData(initialAuthData);\n\nconst onLogin = newAuthData => setAuthData(newAuthData);\n\nuseEffect(() => {\n  // axios\n  //   .get(\"http://localhost:5000/profile\")\n  //   .then( res=>{\n  //     res = res.data\n  //     if (res[\"session\"] === \"active\"){\n  //       changeLogged(\"true\")\n  //       console.log(res)\n  //     } \n  //   }\n  //   )\n  const currentAuthData = {\n    flag: Cookies.get('session')\n  };\n\n  if (currentAuthData) {\n    setAuthData(currentAuthData);\n  }\n}, []);\nReactDOM.render( /*#__PURE__*/React.createElement(LoginContext.Provider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 2\n  }\n}, \" \", /*#__PURE__*/React.createElement(Start, {\n  login: onLogin,\n  logout: onLogout,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 26\n  }\n})), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/dhakad/Documents/AI/FF/Frontend_Test/src/index.js"],"names":["React","createContext","useState","useEffect","ReactDOM","Start","Cookies","LoginContext","initialAuthData","flag","authData","setAuthData","onLogout","onLogin","newAuthData","currentAuthData","get","render","document","getElementById"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAGA,OAAO,MAAMC,YAAY,GAAGN,aAAa,CAAC,IAAD,CAAlC;AAEP,MAAMO,eAAe,GAAC;AAACC,EAAAA,IAAI,EAAC;AAAN,CAAtB;AAEA,MAAM,CAACC,QAAD,EAAUC,WAAV,IAAwBT,QAAQ,CAACM,eAAD,CAAtC;;AACA,MAAMI,QAAQ,GAAG,MAAMD,WAAW,CAACH,eAAD,CAAlC;;AAEA,MAAMK,OAAO,GAAGC,WAAW,IAAIH,WAAW,CAACG,WAAD,CAA1C;;AACEX,SAAS,CAAC,MAAK;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAMY,eAAe,GAAG;AAACN,IAAAA,IAAI,EAACH,OAAO,CAACU,GAAR,CAAY,SAAZ;AAAN,GAAxB;;AACA,MAAID,eAAJ,EAAqB;AACnBJ,IAAAA,WAAW,CAACI,eAAD,CAAX;AACD;AACJ,CAfU,EAeT,EAfS,CAAT;AAmBFX,QAAQ,CAACa,MAAT,eACC,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAwB,oBAAC,KAAD;AAAO,EAAA,KAAK,EAAEJ,OAAd;AAAuB,EAAA,MAAM,EAAED,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAxB,CADD,EAC6FM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAD7F","sourcesContent":["\nimport React, { createContext, useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Start from \"Start\";\nimport Cookies from 'js-cookie';\n\n\nexport const LoginContext = createContext(null);\n\nconst initialAuthData={flag:\"\"}\n\nconst [authData,setAuthData]= useState(initialAuthData)\nconst onLogout = () => setAuthData(initialAuthData);\n\nconst onLogin = newAuthData => setAuthData(newAuthData);\n  useEffect(() =>{\n    // axios\n    //   .get(\"http://localhost:5000/profile\")\n    //   .then( res=>{\n    //     res = res.data\n    //     if (res[\"session\"] === \"active\"){\n    //       changeLogged(\"true\")\n    //       console.log(res)\n    //     } \n    //   }\n    //   )\n    const currentAuthData = {flag:Cookies.get('session')};\n    if (currentAuthData) {\n      setAuthData(currentAuthData);\n    }\n},[])\n\n\n    \nReactDOM.render(\n <LoginContext.Provider> <Start login={onLogin} logout={onLogout}/></LoginContext.Provider> ,document.getElementById(\"root\")\n );"]},"metadata":{},"sourceType":"module"}